
nmap zcc :mapclear!<CR>
nmap zso :source C:\Users\kyo.lai82\vimfiles\_vimrc <CR>
imap <F1> <Esc>y?[T<CR>p/void<CR>w
nmap <F1> y?[T<CR>p/void<CR>w
nmap zrn :vsc Project.AddNewItem<CR> 
nmap zm :vsc CodeMaid.CleanupActiveDocument<CR>:make<CR>
nmap zra zz:vsc CodeMaid.CleanupActiveDocument<CR>:vsc TestExplorer.RunAllTests<CR>:vsc TestExplorer.ShowTestExplorer<CR>
imap zra <Esc>zz:vsc CodeMaid.CleanupActiveDocument<CR>make<CR>:vsc TestExplorer.RunAllTests<CR>:vsc TestExplorer.ShowTestExplorer<CR>
vmap zra <Esc><Esc>zz:vsc CodeMaid.CleanupActiveDocument<CR>make<CR>:vsc TestExplorer.RunAllTests<CR>:vsc TestExplorer.ShowTestExplorer<CR>
nmap zrt zz:vsc CodeMaid.CleanupActiveDocument<CR>:vsc TestExplorer.RunAllTestsInContext<CR>:vsc TestExplorer.ShowTestExplorer<CR>
imap zrt <Esc>zz:vsc CodeMaid.CleanupActiveDocument<CR>:vsc TestExplorer.RunAllTestsInContext<CR>:vsc TestExplorer.ShowTestExplorer<CR>
vmap zrt <Esc><Esc>zz:vsc CodeMaid.CleanupActiveDocument<CR>:vsc TestExplorer.RunAllTestsInContext<CR>:vsc TestExplorer.ShowTestExplorer<CR>
nmap zrl zz:vsc CodeMaid.CleanupActiveDocument<CR>make<CR>:vsc TestExplorer.RepeatLastRun<CR>
imap zrl <Esc>zz:vsc CodeMaid.CleanupActiveDocument<CR>:vsc TestExplorer.RepeatLastRun<CR>
nmap zgc zz:vsc CodeMaid.CleanupActiveDocument<CR>:make<CR>:vsc Team.Git.GotoGitChanges<CR>
nmap zgp :vsc Team.Git.Pull<CR>
nmap zk :vsc View.NavigateBackward<CR>
imap zk <Esc>:vsc View.NavigateBackward<CR>
nmap zj :vsc View.NavigateForward<CR>
imap zj <Esc>:vsc View.NavigateForward<CR>

nmap gw1 :vsc Window.ApplyWindowLayout1<CR>
nmap gw2 :vsc Window.ApplyWindowLayout2<CR>
nmap gw3 :vsc Window.ApplyWindowLayout3<CR>
nmap gw4 :vsc Window.ApplyWindowLayout4<CR>
nmap gw5 :vsc Window.ApplyWindowLayout5<CR>
nmap gw6 :vsc Window.ApplyWindowLayout6<CR>
nmap gw7 :vsc Window.ApplyWindowLayout7<CR>
nmap gfs :vsc View.FullScreen<CR>

imap zae Assert.AreEqual(expected,actual);<Esc>T(
nmap zae aAssert.AreEqual(expected,actual);<Esc>T(

nmap zrr :vsc ReSharper.ReSharper_Rename<CR><Esc>
nmap zrm :vsc ReSharper.ReSharper_ExtractMethod<CR><Esc>
vmap zrm :vsc ReSharper.ReSharper_ExtractMethod<CR><Esc>
map zrp :vsc ReSharper.ReSharper_IntroduceParameter<CR><Esc>
map zri :vsc ReSharper.ReSharper_InlineVariable<CR><Esc>
map zrv :vsc ReSharper.ReSharper_IntroVariable<CR><Esc>
map zrf :vsc ReSharper.ReSharper_IntroduceField<CR><Esc>
nmap zt :vsc ReSharper.ReSharper_GotoType<CR>
nmap zro :vsc ReSharper.ReSharper_Move<CR>
nmap zsc :vsc ReSharper.ReSharper_ShowCodeStructure<CR> 
nmap zcs :vsc ReSharper.ReSharper_ChangeSignature<CR>

nmap zpm :vsc ReSharper.ReSharper_PasteMultiple<CR>
imap zpm <Esc>:vsc ReSharper.ReSharper_PasteMultiple<CR>
nmap ,m :vsc ReSharper.ReSharper_GotoFileMember<CR>
nmap zf :vsc ReSharper.ReSharper_GoToDeclaration<CR>
imap zf <Esc>:vsc ReSharper.ReSharper_GoToDeclaration<CR>
nmap zcf :vsc Edit.GoToDeclaration<CR>
imap zcf <Esc>:vsc Edit.GoToDeclaration<CR>
nmap zn :vsc ReSharper.ReSharper_GotoPrevErrorInSolution<CR>
imap zn <Esc>:vsc ReSharper.ReSharper_GotoPrevErrorInSolution<CR>

nmap zrc :vsc CodeMaid.CleanupActiveDocument<CR>
imap zrc <Esc>:vsc CodeMaid.CleanupActiveDocument<CR>
nmap zrz :vsc CodeMaid.ReorganizeActiveDocument<CR>
imap zrz <Esc>:vsc CodeMaid.ReorganizeActiveDocument<CR>

nmap z. ^ireturn 
imap z. <Esc>^ireturn 
nmap z; $a;<Esc>
imap z; <Esc>$a;

nmap ,p "0p
nmap ,P "0P
imap z,p <Esc>"0pa
imap z,P <Esc>"0Pa

:vmap <Esc> <Esc><Esc><Esc>
:imap jj <Esc>
:nmap <BS> a<BS>
:nmap zh ^
:nmap hh ^
:imap zh <Esc>^i
:nmap zl $
:nmap ll $
:imap zl <End>
:nmap zc ^C
:nmap zb bcw
:vmap zb <Esc>bcw
:imap zdd <Esc>dd
:nmap zd yyp

nmap qq ZQ
nmap zq :wq<CR>
" map C :set rnu!<CR>
" insert single char
:map ,i i?<Esc>r
" append single char
:map ,a a?<Esc>r